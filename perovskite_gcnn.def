Bootstrap: docker
From: nvcr.io/nvidia/pytorch:25.01-py3

%labels
    Author: Perovskite GCNN Project
    Version: 1.0
    Description: Container for Perovskite Ordering GCNNs with PyTorch, PyG, and scientific computing libraries

%environment
    export LC_ALL=C
    export PATH=/opt/conda/bin:$PATH
    export CONDA_AUTO_ACTIVATE_BASE=false

%post
    # Update package lists and install system dependencies
    apt-get update && apt-get install -y \
        git \
        wget \
        curl \
        build-essential \
        libssl-dev \
        libffi-dev \
        libgomp1 \
        libgl1-mesa-glx \
        libglib2.0-0 \
        libsm6 \
        libxext6 \
        libxrender-dev \
        libgomp1 \
        && rm -rf /var/lib/apt/lists/*

    # Set up conda environment
    export PATH=/opt/conda/bin:$PATH
    conda config --set channel_priority strict
    
    # Create conda environment from environment.yml
    # We'll install the key packages manually since the environment.yml has specific versions
    conda install -y -c conda-forge -c pyg -c pytorch -c nvidia \
        python=3.10 \
        pandas=1.5.3 \
        scipy=1.10.1 \
        numpy=1.22.4 \
        scikit-learn=1.2.2 \
        matplotlib=3.7.1 \
        seaborn=0.12.2 \
        pytorch=1.13.1 \
        pytorch-cuda=11.7 \
        torchvision=0.14.1 \
        torchaudio=0.13.1 \
        pyg=2.3.0 \
        pytorch-sparse=0.6.17 \
        pytorch-scatter=2.1.1 \
        pytorch-cluster=1.6.1 \
        jupyter \
        ipykernel \
        pip

    # Install additional packages via pip
    pip install \
        pymatgen==2023.5.10 \
        ase==3.22.1 \
        rdkit==2023.3.1 \
        e3fp==1.2.5 \
        e3nn==0.5.1 \
        wandb==0.16.3 \
        gdown==4.7.1 \
        bokeh==3.3.4 \
        plotly==5.19.0 \
        networkx==3.2.1 \
        tqdm==4.65.0 \
        pyyaml==6.0 \
        requests==2.29.0 \
        beautifulsoup4==4.12.3 \
        boto3==1.34.51 \
        fastapi==0.110.0 \
        flask==3.0.2 \
        uvicorn==0.27.1 \
        pydantic==2.6.3 \
        python-dotenv==1.0.1 \
        paramiko==3.4.0 \
        gitpython==3.1.42 \
        monty==2024.2.26 \
        mp-api==0.38.0 \
        sympy==1.12 \
        tabulate==0.9.0 \
        uncertainties==3.1.7 \
        palettable==3.3.3 \
        opt-einsum==3.3.0 \
        opt-einsum-fx==0.1.4 \
        orjson==3.9.15 \
        tenacity==8.2.3 \
        backoff==1.11.1 \
        click==8.1.7 \
        future==1.0.0 \
        jsonschema==3.2.0 \
        latexcodec==2.0.1 \
        libsigopt==1.0.0 \
        maggma==0.63.3 \
        mmh3==4.1.0 \
        mongogrant==0.3.3 \
        mongomock==4.1.2 \
        mpmath==1.3.0 \
        msgpack==1.0.7 \
        pynacl==1.5.0 \
        pypng==0.20220715.0 \
        pyrsistent==0.20.0 \
        qmcpy==1.2 \
        referencing==0.33.0 \
        rpds-py==0.18.0 \
        ruamel-yaml==0.17.40 \
        ruamel-yaml-clib==0.2.8 \
        s3transfer==0.10.0 \
        sdaxen-python-utilities==0.1.5 \
        sentinels==1.0.0 \
        sigopt==8.8.2 \
        sigoptlite==0.1.2 \
        smart-open==7.0.1 \
        smmap==5.0.1 \
        spglib==2.3.1 \
        sshtunnel==0.4.0 \
        starlette==0.36.3 \
        wrapt==1.16.0 \
        aioitertools==0.11.0 \
        annotated-types==0.6.0 \
        anyio==4.3.0 \
        attrs==23.2.0 \
        bcrypt==4.1.2 \
        blinker==1.7.0 \
        botocore==1.34.51 \
        dnspython==2.6.1 \
        emmet-core==0.69.5 \
        filelock==3.13.1 \
        h11==0.14.0 \
        itsdangerous==2.1.2 \
        jmespath==1.0.1 \
        jsonschema-specifications==2023.12.1 \
        mscorefonts==0.0.1 \
        nest-asyncio==1.6.0 \
        pydantic-core==2.16.3 \
        pydantic-settings==2.2.1 \
        pydash==7.0.7 \
        pymongo==4.6.2 \
        sniffio==1.3.1 \
        soupsieve==2.5 \
        werkzeug==3.0.1 \
        gitdb==4.0.11

    # Clean up conda cache
    conda clean -afy

    # Create a working directory
    mkdir -p /workspace
    cd /workspace

%runscript
    # Default command when container is run
    exec /bin/bash "$@"

%startscript
    # Command when container is started
    exec /bin/bash "$@"

%test
    # Test that key packages are available
    python -c "import torch; print(f'PyTorch version: {torch.__version__}')"
    python -c "import torch_geometric; print(f'PyG version: {torch_geometric.__version__}')"
    python -c "import pymatgen; print(f'Pymatgen version: {pymatgen.__version__}')"
    python -c "import numpy; print(f'NumPy version: {numpy.__version__}')"
    python -c "import pandas; print(f'Pandas version: {pandas.__version__}')"
    python -c "import sklearn; print(f'Scikit-learn version: {sklearn.__version__}')"
    python -c "import matplotlib; print(f'Matplotlib version: {matplotlib.__version__}')"
    python -c "import seaborn; print(f'Seaborn version: {seaborn.__version__}')"
    python -c "import wandb; print(f'Wandb version: {wandb.__version__}')"
    python -c "import e3nn; print(f'E3NN version: {e3nn.__version__}')"
    python -c "import ase; print(f'ASE version: {ase.__version__}')"
    python -c "import rdkit; print(f'RDKit version: {rdkit.__version__}')"
    echo "All key packages imported successfully!"

%help
    Perovskite Ordering GCNNs Container
    
    This container includes:
    - PyTorch 1.13.1 with CUDA 11.7 support
    - PyTorch Geometric (PyG) 2.3.0
    - Pymatgen for materials science
    - E3NN for equivariant neural networks
    - RDKit for cheminformatics
    - ASE for atomic simulation environment
    - Standard ML libraries (numpy, pandas, scikit-learn, matplotlib, seaborn)
    - Wandb for experiment tracking
    - Jupyter for interactive development
    
    Usage:
    - Interactive shell: singularity shell perovskite_gcnn.sif
    - Run script: singularity exec perovskite_gcnn.sif python script.py
    - Jupyter notebook: singularity exec --nv perovskite_gcnn.sif jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root
    
    For GPU support, use the --nv flag when running the container. 